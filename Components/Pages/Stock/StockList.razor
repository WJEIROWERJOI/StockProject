@page "/Stock/List"
@using Microsoft.AspNetCore.Authorization
@using StockProject.Data.Dtos
@using StockProject.Data.Services

@inject StockService stockService

@* @attribute [Authorize] *@

<PageTitle>StockList</PageTitle>
<h3>StockList</h3>
<hr />



@* 표 *@
<table class="table">
	<thead>
		<tr>
			<th scope="col">Category</th>
			<th scope="col">ProductName</th>
			<th scope="col">Description</th>
			<th scope="col">Quantity</th>
			<th scope="col">CreatedAt</th>
			<th scope="col">LastUpdatedAt</th>
			<th scope="col">Options</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var dto in dtos)
		{
			<tr>
				<td>@dto.Category</td>
				<td>@dto.ProductName</td>
				<td>@dto.Description</td>
				<td>@dto.Quantity</td>
				<td>@dto.CreatedAt.AddHours(9).ToString("yy-MM-dd HH:mm")</td>
				<td>@dto.LastUpdatedAt.AddHours(9).ToString("yy-MM-dd HH:mm")</td>

				<td>

					<button class="btn btn-primary btn-sm" @onclick="() => ChangeAmount(dto, 1)">+</button>					
					<button class="btn btn-primary btn-sm" @onclick="() => ChangeAmount(dto, -1)">-</button>

					@* <button class="btn btn-primary btn-sm" @onclick="() => BeginEdit(usr, true)">수정</button>
								<button class="btn btn-primary btn-sm" @onclick="() => BeginEdit(usr, false)">비번</button>
								<button type="button" class="btn btn-primary btn-sm" data-bs-toggle="modal"
										data-bs-target="#abc">
									삭제
								</button>
								<div class="modal fade" id="abc" data-bs-keyboard="false" tabindex="-1">
									<div class="modal-dialog modal-dialog-centered">
										<div class="modal-content">
											<div class="modal-header">
												<h1 class="modal-title fs-3" id="abc">확인</h1>
												<button type="button" class="btn-close" data-bs-dismiss="modal"
														aria-label="Close"></button>
											</div>
											<div class="modal-body">
												@usr.UserName 을 삭제 하시겠습니까?
											</div>
											<div class="modal-footer">
												<button type="button" class="btn btn-primary"
														@onclick="() => deleteUser(usr.UserName)">
													네
												</button>
												<button type="button" class="btn btn-secondary"
														data-bs-dismiss="modal">
													아니요
												</button>
											</div>
										</div>
									</div>
								</div> *@
				</td>
			</tr>

		}
	</tbody>
</table>
@* 
@if (!string.IsNullOrEmpty(message))
{
	<p style="color: green;">@message</p>
} *@

@if (!string.IsNullOrEmpty(ErrorMessage))
{
	<div class="alert alert-danger">@ErrorMessage</div>
}




@code {
	private List<StockDto> dtos = new();
	private string ErrorMessage = "";


	protected override async Task OnInitializedAsync()
	{

		dtos = await stockService.FindAllStockAsync();

		await base.OnInitializedAsync();

	}

	protected async Task ChangeAmount(StockDto dto, int amount)
	{
		try
		{
			await stockService.ChangeAmountAsync(dto, amount);
		}
		catch (KeyNotFoundException ex)
		{
			ErrorMessage = $"데이터를 찾을 수 없습니다: {ex.Message}";
		}
		catch (Exception ex)
		{
			ErrorMessage = $"오류 발생: {ex.Message}";
		}
		StateHasChanged();
	}

}

