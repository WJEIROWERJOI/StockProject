@page "/Stock/List"
@using StockProject.Data.Dtos
@using StockProject.Data.Services

@inject StockService stockService

<PageTitle>StockList</PageTitle>
<h3>StockList</h3>
<hr />



@* 표 *@
<table class="table">
	<thead>
		<tr>
			<th scope="col">Category</th>
			<th scope="col">ProductName</th>
			<th scope="col">Description</th>
			<th scope="col">Quantity</th>
			<th scope="col">CreatedAt</th>
			<th scope="col">LastUpdatedAt</th>
			<th scope="col">Options</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var stk in dtos)
		{
				<tr>
					<td>@stk.Category</td>
					<td>@stk.ProductName</td>
					<td>@stk.Description</td>
					<td>@stk.Quantity</td>
				<td>@stk.CreatedAt.AddHours(9).ToString("yyyy-MM-dd HH:mm")</td>
				<td>@stk.LastUpdatedAt.AddHours(9).ToString("yyyy-MM-dd HH:mm")</td>

					@* <td>
								<button class="btn btn-primary btn-sm" @onclick="() => BeginEdit(usr, true)">수정</button>
								<button class="btn btn-primary btn-sm" @onclick="() => BeginEdit(usr, false)">비번</button>
								<button type="button" class="btn btn-primary btn-sm" data-bs-toggle="modal"
										data-bs-target="#abc">
									삭제
								</button>
								<div class="modal fade" id="abc" data-bs-keyboard="false" tabindex="-1">
									<div class="modal-dialog modal-dialog-centered">
										<div class="modal-content">
											<div class="modal-header">
												<h1 class="modal-title fs-3" id="abc">확인</h1>
												<button type="button" class="btn-close" data-bs-dismiss="modal"
														aria-label="Close"></button>
											</div>
											<div class="modal-body">
												@usr.UserName 을 삭제 하시겠습니까?
											</div>
											<div class="modal-footer">
												<button type="button" class="btn btn-primary"
														@onclick="() => deleteUser(usr.UserName)">
													네
												</button>
												<button type="button" class="btn btn-secondary"
														data-bs-dismiss="modal">
													아니요
												</button>
											</div>
										</div>
									</div>
								</div>
					</td> *@
				</tr>
			
		}
	</tbody>
</table>
@* 
@if (!string.IsNullOrEmpty(message))
{
	<p style="color: green;">@message</p>
} *@





@code {
	private List<StockDto> dtos = new();

	protected override async Task OnInitializedAsync()
	{
		
		dtos = await stockService.FindAllStockAsync();
		
		await base.OnInitializedAsync();
	
	}

}
